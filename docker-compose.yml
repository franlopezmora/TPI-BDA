version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: tpi-postgres
    restart: no
    environment:
      POSTGRES_DB: tpi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  admin-service:
    build:
      context: .
      dockerfile: tpi-admin-service/Dockerfile
    container_name: tpi-admin-service
    depends_on:
      - postgres
    ports:
      - "8081:8081"

  vehiculos-service:
    build:
      context: .
      dockerfile: tpi-vehiculos-service/Dockerfile
    container_name: tpi-vehiculos-service
    depends_on:
      - postgres
    ports:
      - "8082:8082"

  reportes-service:
    build:
      context: .
      dockerfile: tpi-reportes-service/Dockerfile
    container_name: tpi-reportes-service
    depends_on:
      - postgres
    ports:
      - "8083:8083"
      
  notificaciones-service:
    build:
      context: .
      dockerfile: tpi-notificaciones-service/Dockerfile
    container_name: tpi-notificaciones-service
    depends_on:
      - postgres
    ports:
      - "8084:8084"

  pruebas-service:
    build:
      context: .
      dockerfile: tpi-pruebas-service/Dockerfile
    container_name: tpi-pruebas-service
    depends_on:
      - postgres
    ports:
      - "8085:8085"

  gateway:
    build:
      context: .
      dockerfile: tpi-gateway-service/Dockerfile
    container_name: tpi-gateway
    depends_on:
      - admin-service
      - vehiculos-service
      - reportes-service
      - notificaciones-service 
    ports:
      - "8080:8080"

  frontend:
    build:
      context: .
      dockerfile: tpi-frontend/Dockerfile
    container_name: tpi-frontend
    ports:
      - "3000:3000"
    depends_on:
      - admin-service
      - vehiculos-service
      - reportes-service
